name: Build, Push & Deploy to EKS

on:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: af-south-1
  ECR_REPOSITORY: base-line-api
  CLUSTER_NAME: dev-env-cluster

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build Spring Boot JAR
        run: ./mvnw clean package -DskipTests -Dspring.profiles.active=ci

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image
        run: |
          COMMIT_HASH=${GITHUB_SHA::7}
          IMAGE_TAG=$COMMIT_HASH
          ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}

          echo "Building Docker image..."
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG \
                       -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest .

          echo "Pushing to ECR..."
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:latest

          echo "Image pushed: $ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}

      - name: Create/Update DB Secret
        run: |
          kubectl create secret generic db-credentials \
            --from-literal=DB_URL=${{ secrets.DB_URL }} \
            --from-literal=ECR_REGISTRY=${{ secrets.ECR_REGISTRY }} \
            --from-literal=DB_USER=${{ secrets.DB_USER }} \
            --from-literal=DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            --namespace=dev \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Apply Kubernetes manifests
        run: |
           export ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
           envsubst < k8s/deploy.yaml | kubectl apply -f -


      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/
